# Generated by Django 5.1 on 2025-09-15 19:50

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("others", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "patient_type",
                    models.CharField(
                        choices=[("adult", "Adult"), ("pediatric", "Pediatric")],
                        max_length=20,
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=255, unique=True, verbose_name="Code"),
                ),
                (
                    "house_number",
                    models.CharField(max_length=255, verbose_name="House Number"),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")], max_length=10
                    ),
                ),
                ("mobile_number", models.CharField(max_length=15)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Pediatric",
            fields=[
                (
                    "patient_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="patients.patient",
                    ),
                ),
            ],
            bases=("patients.patient",),
        ),
        migrations.CreateModel(
            name="Adult",
            fields=[
                (
                    "patient_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="patients.patient",
                    ),
                ),
                ("occupation", models.CharField(max_length=255)),
                (
                    "marital_status",
                    models.CharField(
                        choices=[
                            ("married", "Married"),
                            ("single", "Single"),
                            ("divorced", "Divorced"),
                            ("widowed", "Widowed"),
                        ],
                        max_length=255,
                    ),
                ),
                ("children_number", models.IntegerField(default=0)),
                ("age_of_the_youngest", models.IntegerField(default=0)),
                (
                    "education_level",
                    models.CharField(
                        choices=[
                            ("illiterate", "Illiterate"),
                            ("read_write", "Read and Write"),
                            ("primary", "Primary"),
                            ("preparatory", "Preparatory"),
                            ("secondary", "Secondary"),
                            ("university", "University"),
                            ("postgraduate", "Postgraduate"),
                        ],
                        max_length=255,
                    ),
                ),
                ("age", models.IntegerField(default=0)),
                ("smoking", models.BooleanField(default=False, verbose_name="Smoking")),
                (
                    "smoking_rate",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Rate"
                    ),
                ),
                (
                    "smoking_type",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Type"
                    ),
                ),
                (
                    "other_smoking",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Other"
                    ),
                ),
                (
                    "cessation",
                    models.BooleanField(
                        default=False, verbose_name="Smoking Cessations"
                    ),
                ),
                (
                    "cessation_duration",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Duration"
                    ),
                ),
                (
                    "menstruation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("regular", "Regular"),
                            ("irregular", "Irregular"),
                            ("menopause", "Menopause"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Menstruation",
                    ),
                ),
                (
                    "gravidal_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Gravidal Number",
                    ),
                ),
                (
                    "abortion_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Abortion Number",
                    ),
                ),
                (
                    "contraception",
                    models.BooleanField(default=False, verbose_name="Contraception"),
                ),
                (
                    "contraception_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("implant", "Implant"),
                            ("iud", "IUD"),
                            ("coc", "COC"),
                            ("other", "Other"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="Method",
                    ),
                ),
                (
                    "contraception_other_method",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Other"
                    ),
                ),
                (
                    "bp",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="BP"
                    ),
                ),
                ("hr", models.FloatField(blank=True, null=True, verbose_name="HR")),
                ("temp", models.FloatField(blank=True, null=True, verbose_name="Temp")),
                ("rbs", models.FloatField(blank=True, null=True, verbose_name="RBS")),
                ("spo2", models.FloatField(blank=True, null=True, verbose_name="Spo2")),
                (
                    "jaundice",
                    models.BooleanField(default=False, verbose_name="Jaundice"),
                ),
                ("pallor", models.BooleanField(default=False, verbose_name="Pallor")),
                ("allergy", models.BooleanField(default=False, verbose_name="Allergy")),
                (
                    "allergy_specification",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Specify"
                    ),
                ),
                (
                    "blood_transfusion",
                    models.CharField(
                        choices=[
                            ("no", "No"),
                            ("occasional", "Occasional"),
                            ("regular", "Regular"),
                        ],
                        default="no",
                        max_length=50,
                        verbose_name="Blood Transfusion",
                    ),
                ),
                (
                    "blood_transfusion_duration",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Duration"
                    ),
                ),
                (
                    "surgical",
                    models.CharField(
                        blank=True,
                        choices=[("icu", "ICU"), ("operation", "Operation")],
                        max_length=50,
                        null=True,
                        verbose_name="Surgical",
                    ),
                ),
                (
                    "surgical_operation",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Operation"
                    ),
                ),
                (
                    "icu",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="ICU"
                    ),
                ),
                (
                    "complaints",
                    models.ManyToManyField(
                        blank=True,
                        related_name="adult_complaints",
                        to="others.symptommodel",
                        verbose_name="Complaint",
                    ),
                ),
                (
                    "cyanosis",
                    models.ManyToManyField(
                        blank=True,
                        related_name="adult_cyanosis",
                        to="others.cyanosismodel",
                        verbose_name="Cyanosis",
                    ),
                ),
                (
                    "drugs",
                    models.ManyToManyField(
                        blank=True,
                        related_name="adult_drugs",
                        to="others.drugmodel",
                        verbose_name="Drugs",
                    ),
                ),
                (
                    "family_history",
                    models.ManyToManyField(
                        blank=True,
                        related_name="adult_family_history",
                        to="others.familyhistorymodel",
                        verbose_name="Family History",
                    ),
                ),
                (
                    "medical",
                    models.ManyToManyField(
                        blank=True,
                        related_name="adult_medical",
                        to="others.medicalmodel",
                        verbose_name="Medical",
                    ),
                ),
            ],
            bases=("patients.patient",),
        ),
    ]
